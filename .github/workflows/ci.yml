name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Vérification des fichiers essentiels
    runs-on: ubuntu-latest
    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Vérifier que index.html, styles.css et script.js existent
        run: |
          test -f index.html || (echo "Erreur: index.html manquant" && exit 1)
          test -f styles.css || (echo "Erreur: styles.css manquant" && exit 1)
          test -f script.js || (echo "Erreur: script.js manquant" && exit 1)

  lint:
    name: Vérification du code (HTML + JS)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Installer Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Installer HTMLHint et ESLint
        run: |
          npm install -g htmlhint eslint

      - name: Vérifier HTML avec HTMLHint
        run: htmlhint index.html || true

      - name: Vérifier JavaScript avec ESLint
        run: eslint script.js --fix || true

  deploy:
    name: Déploiement sur GitHub Pages
    needs: [build, lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Déployer uniquement les fichiers statiques
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: .  # OU "public" si tu préfères créer un dossier propre
          clean: true  # nettoie les anciens fichiers de la branche gh-pages

  build-and-test:
    name: Créer un tag Git
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create and push Git tag
        if: github.ref == 'refs/heads/master'
        run: |
          TAG="v1.0.0"
          echo "Création du tag $TAG"
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag $TAG
          git push origin $TAG
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
